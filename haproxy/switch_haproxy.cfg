# Глобальные настройки,можно менять по необходимости
global
    log         127.0.0.1 local2               # Логирование через syslog на локальный сервер, но можно отправить куда необходимо
    chroot      /var/lib/haproxy               # Использование chroot, повысит безопасность
    pidfile     /var/run/haproxy.pid           # куда упадёт PID-файл процесса
    maxconn     250000                         # Максимальное количество соединений
    user        haproxy                        
    group       haproxy                        
    daemon                                     
    stats socket *:1999 level admin            
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s                          
    server-state-base /etc/haproxy/state       # это нужно, чтобы быстро поднимался из потерянного состояния

defaults
    mode                    http                
    log                     global              
    option                  httplog             
    option                  dontlognull         
    retries                 3                   
    timeout http-request    10s                 
    timeout queue           1m                  
    timeout connect         10s                 
    timeout client          1m                 
    timeout server          1m                  
    timeout http-keep-alive 10s                
    timeout check           10s                 
    maxconn                 250000              
    fullconn                250000              
    load-server-state-from-file local           
    timeout http-request    5s                  
    option http-buffer-request            

listen stats
    bind *:8085                                 
    mode http
    stats enable
    stats uri /stats                            
    stats refresh 10s                           


frontend ingress_fronted
    mode http
    bind *:80                                   
    bind *:443 ssl crt /path/to/certs.pem       # помни, что сертификат и ключ в один файл
    option httplog                             
    option dontlognull                          
    option http-ignore-probes                   
    log global                                  

    # ACL (тут нужно со шпаргалкой и под конкретные задачи)
    acl is_abuse src_http_req_rate(Abuse) ge 1000
    acl inc_abuse_cnt src_inc_gpc0(Abuse) gt 2
    acl abuse_cnt src_get_gpc0(Abuse) gt 2
    tcp-request connection track-sc0 src table Abuse
    tcp-request connection reject if abuse_cnt
    http-request deny if abuse_cnt
    http-request deny if is_abuse inc_abuse_cnt
    acl valid_hosts hdr(host) -i example.com www.example.com
    http-request deny if !valid_hosts
    http-request track-sc0 src table per_ip_rates_prod
    http-request deny deny_status 429 if { sc_http_req_rate(0) gt 500 }
    http-request redirect prefix http://%[hdr(host),regsub(^www\.,,i)] code 301 if { hdr_beg(host) -i www. }
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    http-request redirect scheme https code 301 unless { ssl_fc }
    use_backend ingress_backend                  # Направление трафика в backend

    # Логирование заголовков и запросов и ответов, если нужно
    capture request header Host len 32
    capture request header User-Agent len 200
    capture response header x-requestid len 36

backend ingress_backend
    mode http
    balance source                              
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    http-response set-header Referrer-Policy no-referrer-when-downgrade

    default-server inter 2s fall 2 rise 2       # Настройки проверки здоровья серверов
    option forwardfor                          # Проброс заголовка X-Forwarded-For
    server placeholder 127.0.0.1:8081 check maxconn 50000
backend per_ip_rates_prod
    stick-table type ip size 1m expire 10m store http_req_rate(10s)
backend Abuse
    stick-table type ip size 100K expire 30m store gpc0,http_req_rate(10s)
